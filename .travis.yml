language: cpp

dist: trusty

notifications:
  email: false

matrix:
  include:
  # Linux - gcc 7 + coverage
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COVERAGE=ON

  # Linux - gcc 7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
  # Linux - gcc 8
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
  # Linux - clang 5
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - g++-7
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
  # Linux - clang 6
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - g++-7
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        

before_install:
  - bash --version
  - eval "${MATRIX_EVAL}"

script:
  - |
    if [[ -v COVERAGE ]]; then
      cmake . -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCOVERAGE=ON && make && ctest -C Debug --output-on-failure
    else
      cmake . -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug && make && ctest -C Debug --output-on-failure
      cmake . -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release && make && ctest -C Release --output-on-failure
    fi

after_success:
  - |
    if [[ -v COVERAGE ]]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --directory . --capture --output-file coverage.info coverage info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info 
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    fi